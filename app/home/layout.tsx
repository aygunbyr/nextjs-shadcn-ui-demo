"use client";
import "../globals.css";
import { useEffect, useLayoutEffect } from "react";
import { useRouter } from "next/navigation";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useGlobalContext } from "../context/store";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function HomeLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const { username, isLogin } = useGlobalContext();
  const router = useRouter();

  // The router history allows you to go back to the last page.
  // For example, when the user navigates to a invalid route,
  // you can use the router.replace to prevent the user to navigate back to the invalid route.

  // I used router.replace because I do not want user go back to home page therefore I replace invalid route '/home' with login page '/'.
  // Home page is invalid route because user has not logged in yet.
  useEffect(() => {
    if (!isLogin) {
      router.replace("/");
    }
  }, [isLogin, router]);

  return (
    <html lang="en">
      <body className={inter.className}>
        Home layout
        <h1>UserName: {username}</h1>
        {children}
      </body>
    </html>
  );
}
